@tailwind base;
@tailwind components;
@tailwind utilities;

// ======== Design Tokens =========
:host {
    // Cropper
    --cropper-display: block;
    --cropper-height: 100%;
    --cropper-width: 100%;

    // Cropper Container
    --cropper-container-width: 100%;
    --cropper-container-height: 100%;

    // Cropper Canvas
    --cropper-canvas-width: 100%;
    --cropper-canvas-height: 100%;

    // Cropper Image
    --cropper-image-width: 100%;
    --cropper-image-height: 100%;
}

:host {
    display: var(--cropper-display, block) !important;
    height: var(--cropper-height, 100%) !important;
    width: var(--cropper-width, 100%) !important;
    flex: 1;
}

::ng-deep {
    .sb-main-padded {
        @apply p-0 !important;
    }
}

.ng-cropper-container {
    display: flex;
    flex-direction: column;
    width: var(--cropper-container-width, 100%);
    height: var(--cropper-container-height, 100%);
    position: relative;
    box-sizing: border-box;

    .cropper-canvas {
        flex: 1;
        width: var(--cropper-canvas-width, 100%);
        height: var(--cropper-canvas-height, 100%);
        display: block;
        box-sizing: border-box;
    }

    .cropper-image {
        flex: 1 1 auto;
        width: var(--cropper-image-width, 100%);
        height: var(--cropper-image-height, 100%);
        display: block;
        box-sizing: border-box;
    }

    // Force hide shade element when hidden attribute is present
    cropper-shade[hidden] {
        display: none !important;
    }

}

// Ensure all cropper elements use border-box to avoid layout drift with borders/padding
.ng-cropper-container cropper-canvas,
.ng-cropper-container cropper-image,
.ng-cropper-container cropper-shade,
.ng-cropper-container cropper-selection,
.ng-cropper-container cropper-grid,
.ng-cropper-container cropper-crosshair,
.ng-cropper-container cropper-handle {
    box-sizing: border-box;
}
